<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--
        servlet标签用来给Tomcat服务器配置servlet程序的
        没什么问题, 这个逻辑很清晰
    -->
    <servlet>
        <!--
            servlet-name标签 -> 是用来给servlet程序起一个别名的, 就像小明一样
            这个别名一般要和实现了Servlet接口的实现类的名字一样
        -->
        <servlet-name>HelloServlet</servlet-name>

        <!--
            servlet-class标签 -> 是用来写出来servlet程序的完整路径的全名
            全名就是说要把资源路径, 包的路径, 等等都写出来
        -->
        <servlet-class>com.atguigu.servlet.HelloServlet</servlet-class>
    </servlet>



    <!--
        servlet-mapping标签给servlet程序配置访问地址
        上面的servlet标签只是给出来了程序, 但是没有地址
    -->
    <servlet-mapping>
        <!--
            servlet-name标签的作用是告诉服务器, 当前配置的地址给哪个servlet程序使用
            servlet-name 需要和下面一起理解, 比如url-pattern的值是给servlet-name使用的. servlet-name的值一定和上面一样
        -->
        <servlet-name>HelloServlet</servlet-name>
        <!--
            url-pattern 标签配置访问的地址
            /           斜杠在服务器解析的时候 -> 会解析为 http://ip:port/工程路径
                        这里的地址就是Tomcat实例中配置的url
            /hello      表示地址为 -> http://ip:port/工程路径/hello

            /            / = http://localhost:8088/06_servlet.html
            /hello       / = http://localhost:8088/06_servlet.html/hello
        -->
        <url-pattern>/hello</url-pattern>

        <!--
            一般来说, url-pattern中的值是和实现了Servlet接口的类名是一样的, 因为这个值, 就是浏览器中访问的值
            见名知意, 规则大于配置. 尽量能够形成对应, 而不要写/abc
        -->

    </servlet-mapping>



</web-app>
